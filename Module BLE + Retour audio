#include <Arduino.h>
#include <HardwareSerial.h>
#include <DFRobotDFPlayerMini.h>
#include <BLEDevice.h>
#include <BLEScan.h>
#include <BLEAdvertisedDevice.h>

// Définition des pins RX/TX pour DFPlayer Mini
#define DFPLAYER_RX 16
#define DFPLAYER_TX 17
#define LED_BUILTIN 2  // LED interne de l'ESP32 (GPIO2)

// Initialisation des objets
HardwareSerial mySoftwareSerial(1);  // Port série pour DFPlayer Mini
DFRobotDFPlayerMini myDFPlayer;
BLEScan* pBLEScan;

bool deviceDetected = false;  // Indique si un appareil BLE est détecté
bool audioPlaying = false;    // Indique si l'audio est en cours de lecture

// Callback lorsqu'un appareil BLE est détecté
class MyAdvertisedDeviceCallbacks : public BLEAdvertisedDeviceCallbacks {
public:
  void onResult(BLEAdvertisedDevice advertisedDevice) {
    deviceDetected = true;  // Détection d'un appareil BLE

    // Affiche l'adresse MAC de l'appareil détecté
    Serial.print("Appareil BLE détecté ! Adresse MAC: ");
    Serial.println(advertisedDevice.getAddress().toString().c_str());
  }
};

void setup() {
  Serial.begin(115200);
  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, LOW);  // Assure que la LED est éteinte au départ

  // Initialisation du DFPlayer Mini
  mySoftwareSerial.begin(9600, SERIAL_8N1, DFPLAYER_RX, DFPLAYER_TX);
  if (!myDFPlayer.begin(mySoftwareSerial)) {
    Serial.println("Erreur DFPlayer Mini !");
    while (true);
  }
  Serial.println("DFPlayer prêt !");
  myDFPlayer.volume(20);  // Réglage du volume

  // Initialisation du Bluetooth
  BLEDevice::init("ESP32_BLE_Scanner");
  pBLEScan = BLEDevice::getScan();"
  pBLEScan->setAdvertisedDeviceCallbacks(new MyAdvertisedDeviceCallbacks());
  pBLEScan->setActiveScan(true);
  pBLEScan->setInterval(100);
  pBLEScan->setWindow(99);
}

void loop() {
  Serial.println("Scan BLE en cours...");
  deviceDetected = false;  // Réinitialise avant chaque scan
  pBLEScan->start(5, false);  // Scan BLE pendant 5 secondes

  if (deviceDetected && !audioPlaying) {
    // Un appareil BLE est détecté, on joue l'audio et allume la LED
    digitalWrite(LED_BUILTIN, HIGH);  // Allume la LED bleue
    Serial.println("Lecture de 001.mp3...");
    myDFPlayer.play(1);  // Joue la piste audio 001.mp3
    audioPlaying = true;
  }

  // Vérifie si le DFPlayer Mini a terminé la lecture
  if (audioPlaying && myDFPlayer.readState() == 0) {
    digitalWrite(LED_BUILTIN, LOW);  // Éteint la LED après la lecture
    Serial.println("Audio terminé, LED éteinte.");
    audioPlaying = false;
  }

  delay(2000);  // Pause avant le prochain scan
}
